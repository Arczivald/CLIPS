   /*******************************************************/
   /*      "C" Language Integrated Production System      */
   /*                                                     */
   /*               CLIPS Version 6.24  06/05/06          */
   /*                                                     */
   /*                                                     */
   /*******************************************************/

/*************************************************************/
/* Purpose:                                                  */
/*                                                           */
/* Principal Programmer(s):                                  */
/*      Brian L. Dantes                                      */
/*                                                           */
/* Contributing Programmer(s):                               */
/*                                                           */
/* Revision History:                                         */
/*      6.23: Corrected compilation errors for files         */
/*            generated by constructs-to-c. DR0861           */
/*                                                           */
/*      6.24: Renamed BOOLEAN macro type to intBool.         */
/*                                                           */
/*************************************************************/

#ifndef _H_defins
#define _H_defins

#if DEFINSTANCES_CONSTRUCT

#define EnvGetDefinstancesName(theEnv,execStatus,x) GetConstructNameString((struct constructHeader *) x)
#define EnvGetDefinstancesPPForm(theEnv,execStatus,x) GetConstructPPForm(theEnv,execStatus,(struct constructHeader *) x)

#define GetDefinstancesNamePointer(x) GetConstructNamePointer((struct constructHeader *) x)
#define SetDefinstancesPPForm(d,ppf) SetConstructPPForm(theEnv,execStatus,(struct constructHeader *) d,ppf)

#define GetDefinstancesModuleName(x) GetConstructModuleName((struct constructHeader *) x)
#define EnvDefinstancesModule(theEnv,execStatus,x) GetConstructModuleName((struct constructHeader *) x)

struct definstances;

#ifndef _H_conscomp
#include "conscomp.h"
#endif
#ifndef _H_constrct
#include "constrct.h"
#endif
#ifndef _H_cstrccom
#include "cstrccom.h"
#endif
#ifndef _H_moduldef
#include "moduldef.h"
#endif
#ifndef _H_object
#include "object.h"
#endif

typedef struct definstancesModule
  {
   struct defmoduleItemHeader header;
  } DEFINSTANCES_MODULE;

typedef struct definstances
  {
   struct constructHeader header;
   unsigned busy;
   EXPRESSION *mkinstance;
  } DEFINSTANCES;

#define DEFINSTANCES_DATA 22

struct definstancesData
  { 
   struct construct *DefinstancesConstruct;
   int DefinstancesModuleIndex;
#if CONSTRUCT_COMPILER && (! RUN_TIME)
   struct CodeGeneratorItem *DefinstancesCodeItem;
#endif
  };

#define DefinstancesData(theEnv,execStatus) ((struct definstancesData *) GetEnvironmentData(theEnv,execStatus,DEFINSTANCES_DATA))


#ifdef LOCALE
#undef LOCALE
#endif

#ifdef _DEFINS_SOURCE_
#define LOCALE
#else
#define LOCALE extern
#endif

#define DefinstancesModule(x) GetConstructModuleName((struct constructHeader *) x)
#define FindDefinstances(a) EnvFindDefinstances(GetCurrentEnvironment(),GetCurrentExecutionState(),a)
#define GetDefinstancesList(a,b) EnvGetDefinstancesList(GetCurrentEnvironment(),GetCurrentExecutionState(),a,b)
#define GetDefinstancesName(x) GetConstructNameString((struct constructHeader *) x)
#define GetDefinstancesPPForm(x) GetConstructPPForm(GetCurrentEnvironment(),GetCurrentExecutionState(),(struct constructHeader *) x)
#define GetNextDefinstances(a) EnvGetNextDefinstances(GetCurrentEnvironment(),GetCurrentExecutionState(),a)
#define IsDefinstancesDeletable(a) EnvIsDefinstancesDeletable(GetCurrentEnvironment(),GetCurrentExecutionState(),a)
#define ListDefinstances(a,b) EnvListDefinstances(GetCurrentEnvironment(),GetCurrentExecutionState(),a,b)
#define Undefinstances(a) EnvUndefinstances(GetCurrentEnvironment(),GetCurrentExecutionState(),a)

LOCALE void SetupDefinstances(void *,EXEC_STATUS);
LOCALE void *EnvGetNextDefinstances(void *,EXEC_STATUS,void *);
LOCALE void *EnvFindDefinstances(void *,EXEC_STATUS,char *);
LOCALE int EnvIsDefinstancesDeletable(void *,EXEC_STATUS,void *);
LOCALE void UndefinstancesCommand(void *,EXEC_STATUS);
LOCALE void *GetDefinstancesModuleCommand(void *,EXEC_STATUS);
LOCALE intBool EnvUndefinstances(void *,EXEC_STATUS,void *);

#if DEBUGGING_FUNCTIONS
LOCALE void PPDefinstancesCommand(void *,EXEC_STATUS);
LOCALE void ListDefinstancesCommand(void *,EXEC_STATUS);
LOCALE void EnvListDefinstances(void *,EXEC_STATUS,char *,struct defmodule *);
#endif

LOCALE void GetDefinstancesListFunction(void *,EXEC_STATUS,DATA_OBJECT *);
LOCALE void EnvGetDefinstancesList(void *,EXEC_STATUS,DATA_OBJECT *,struct defmodule *);

#endif

#endif





