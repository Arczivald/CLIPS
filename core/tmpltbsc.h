   /*******************************************************/
   /*      "C" Language Integrated Production System      */
   /*                                                     */
   /*             CLIPS Version 6.26  06/05/06            */
   /*                                                     */
   /*       DEFTEMPLATE BASIC COMMANDS HEADER FILE        */
   /*******************************************************/

/*************************************************************/
/* Purpose: Implements core commands for the deftemplate     */
/*   construct such as clear, reset, save, undeftemplate,    */
/*   ppdeftemplate, list-deftemplates, and                   */
/*   get-deftemplate-list.                                   */
/*                                                           */
/* Principal Programmer(s):                                  */
/*      Gary D. Riley                                        */
/*                                                           */
/* Contributing Programmer(s):                               */
/*      Brian L. Dantes                                      */
/*                                                           */
/* Revision History:                                         */
/*      6.23: Corrected compilation errors for files         */
/*            generated by constructs-to-c. DR0861           */
/*                                                           */
/*      6.24: Renamed BOOLEAN macro type to intBool.         */
/*                                                           */
/*************************************************************/

#ifndef _H_tmpltbsc
#define _H_tmpltbsc

#ifndef _H_evaluatn
#include "evaluatn.h"
#endif

#ifdef LOCALE
#undef LOCALE
#endif

#ifdef _TMPLTBSC_SOURCE_
#define LOCALE
#else
#define LOCALE extern
#endif

#define GetDeftemplateList(a,b) EnvGetDeftemplateList(GetCurrentEnvironment(),GetCurrentExecutionState(),a,b)
#define ListDeftemplates(a,b) EnvListDeftemplates(GetCurrentEnvironment(),GetCurrentExecutionState(),a,b)
#define Undeftemplate(a) EnvUndeftemplate(GetCurrentEnvironment(),GetCurrentExecutionState(),a)
#define GetDeftemplateWatch(a) EnvGetDeftemplateWatch(GetCurrentEnvironment(),GetCurrentExecutionState(),a)
#define SetDeftemplateWatch(a,b) EnvSetDeftemplateWatch(GetCurrentEnvironment(),GetCurrentExecutionState(),a,b)

   LOCALE void                           DeftemplateBasicCommands(void *,EXEC_STATUS);
   LOCALE void                           UndeftemplateCommand(void *,EXEC_STATUS);
   LOCALE intBool                        EnvUndeftemplate(void *,EXEC_STATUS,void *);
   LOCALE void                           GetDeftemplateListFunction(void *,EXEC_STATUS,DATA_OBJECT_PTR);
   LOCALE void                           EnvGetDeftemplateList(void *,EXEC_STATUS,DATA_OBJECT_PTR,void *);
   LOCALE void                          *DeftemplateModuleFunction(void *,EXEC_STATUS);
#if DEBUGGING_FUNCTIONS
   LOCALE void                           PPDeftemplateCommand(void *,EXEC_STATUS);
   LOCALE int                            PPDeftemplate(void *,EXEC_STATUS,char *,char *);
   LOCALE void                           ListDeftemplatesCommand(void *,EXEC_STATUS);
   LOCALE void                           EnvListDeftemplates(void *,EXEC_STATUS,char *,void *);
   LOCALE unsigned                       EnvGetDeftemplateWatch(void *,EXEC_STATUS,void *);
   LOCALE void                           EnvSetDeftemplateWatch(void *,EXEC_STATUS,unsigned,void *);
   LOCALE unsigned                       DeftemplateWatchAccess(void *,EXEC_STATUS,int,unsigned,struct expr *);
   LOCALE unsigned                       DeftemplateWatchPrint(void *,EXEC_STATUS,char *,int,struct expr *);
#endif

#endif


